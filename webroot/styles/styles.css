/**
A toolbar utility class
Usage:
<ul class="toolbar">
  <li>...</li>
</ul>

Adjustment classes for toolbar <li> items:
.align-right
  This and the following items will be aligned to the right of the toolbar.

.fluid
  This item can increase in size to cover unused space.
*/
ul.toolbar {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center; }
  ul.toolbar li {
    margin: 0;
    padding: 0 5px;
    flex: 0 0 auto; }
    ul.toolbar li:last-child {
      padding: 0 0 0 5px; }
    ul.toolbar li:first-child {
      padding: 0 5px 0 0; }
    ul.toolbar li.toolbar--align-right {
      margin-left: auto; }
    ul.toolbar li.toolbar--fluid {
      flex: 1 0 auto; }

/**
Contains minor stylings for different types of input.
*/
input[type="text"] {
  border: 1px solid transparent;
  font-size: inherit;
  outline: none;
  padding: 2px 3px;
  width: 100%;
  color: inherit;
  text-decoration: inherit;
  font-style: inherit; }
  input[type="text"]:focus {
    border: 1px solid rgba(0, 0, 0, 0.5); }
  input[type="text"]:disabled {
    background: transparent;
    color: rgba(0, 0, 0, 0.3);
    font-style: italic;
    text-decoration: line-through; }

input[type="checkbox"] {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
  color: rgba(0, 0, 0, 0.7);
  outline: none; }
  input[type="checkbox"]:hover, input[type="checkbox"]:active, input[type="checkbox"]:focus {
    color: black; }
  input[type="checkbox"]:after {
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased; }
  input[type="checkbox"]:after {
    content: 'check_box_outline_blank'; }
  input[type="checkbox"]:checked:after {
    content: 'check_box'; }

button {
  border: none;
  margin: 0;
  padding: 0;
  background: transparent;
  cursor: pointer;
  color: rgba(0, 0, 0, 0.7);
  outline: none; }
  button:hover, button:active, button:focus {
    color: black; }

html {
  font-size: 16px;
  height: 100%; }

body {
  margin: 0;
  padding: 0;
  height: 100%;
  display: flex;
  flex-direction: column; }

.app {
  font-family: Roboto;
  opacity: 0;
  transition: 0.2s ease-out opacity; }
  .app, .app * {
    box-sizing: border-box; }
  .app--ready {
    opacity: 1; }

.tasklists {
  flex: 1 0 auto;
  list-style: none;
  margin: 0;
  padding: 0 0 50px 0; }

footer {
  flex: 0 0 auto;
  padding: 10px;
  border-top: 1px solid rgba(0, 0, 0, 0.3); }
  footer .status {
    text-align: center;
    padding: 0 10px; }

/**
Styles for an open task list.
*/
.tasklist {
  margin: 10px;
  border-radius: 2px;
  box-shadow: 0px 0px 6px 1px rgba(0, 0, 0, 0.31);
  overflow: hidden; }
  .tasklist .tasklist_header {
    padding: 5px; }
  .tasklist .tasklist_title {
    font-size: 1.3rem;
    cursor: pointer; }
  .tasklist .tasklist_title {
    font-size: 1.3rem; }
  .tasklist .tasklist_tasks {
    list-style: none;
    margin: 0;
    padding: 0;
    height: 0;
    overflow: hidden;
    transition: 0.3s ease-out height; }
  .tasklist .tasklist_add {
    display: none;
    border-top: 1px solid rgba(0, 0, 0, 0.3); }
    .tasklist .tasklist_add button {
      display: block;
      width: 100%;
      text-align: center;
      padding-top: 4px; }
      .tasklist .tasklist_add button:hover {
        background-color: rgba(0, 0, 0, 0.1); }
  .tasklist--open .tasklist_header {
    border-bottom: 1px solid rgba(0, 0, 0, 0.3); }
  .tasklist--open .tasklist_title {
    cursor: text; }
  .tasklist--open .tasklist_tasks {
    height: auto; }
  .tasklist--open .tasklist_add {
    display: block; }

.task {
  padding: 5px; }
  .task .task_deletebtn {
    opacity: 0;
    transition: 0.1s ease-in-out opacity; }
  .task:hover .task_deletebtn, .task:focus .task_deletebtn {
    opacity: 1; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
